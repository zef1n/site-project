from .forms import OrderForm
from django.shortcuts import render, redirect, get_object_or_404
from .models import Service
from .cart import Cart
import asyncio

import requests


# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
def index(request):
    return render(request, 'index.html')


def catalog(request):
    services = Service.objects.all()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    return render(request, 'catalog.html', {'services': services})


def cart_add(request, service_id):
    cart = Cart(request)
    service = get_object_or_404(Service, id=service_id)
    cart.add(service=service)
    return redirect('services:cart_detail')


def cart_remove(request, service_id):
    cart = Cart(request)
    service = get_object_or_404(Service, id=service_id)
    cart.remove(service)
    return redirect('services:cart_detail')


def cart_detail(request):
    cart = Cart(request)

    if request.method == 'POST':
        form = OrderForm(request.POST)
        if form.is_valid():
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            for item in cart:
                order = form.save(commit=False)
                order.service = item['service']  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥—É –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∫ –∑–∞–∫–∞–∑—É
                order.save()

                # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
                message = f"üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b>\n\n" \
                          f"üë§ –ò–º—è: {order.customer_name}\n" \
                          f"üìß Email: {order.customer_email}\n" \
                          f"üîó Telegram: @{order.telegram_username}\n" \
                          f"üõ† –£—Å–ª—É–≥–∞: {item['service'].title}\n" \
                          f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {item['total_price']} —Ä—É–±.\n" \
                          f"üìÖ –î–∞—Ç–∞: {order.created_at.strftime('%Y-%m-%d %H:%M')}\n\n" \
                          f"üìú –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {order.additional_info}"

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
                send_telegram_message(message)

            cart.clear()  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            return redirect('services:order_success')
    else:
        form = OrderForm()

    return render(request, 'cart_detail.html', {'cart': cart, 'form': form})


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
def send_telegram_message(message: str):
    bot_token = '7442945233:AAFcqTkImSRADz5IoZdK9zurLbyATDGopP0'
    chat_id = '-4509762134'  # ID —á–∞—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'HTML'
    }

    try:
        response = requests.post(url, data=payload)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ HTTP
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except requests.exceptions.HTTPError as err:
        print(f"–û—à–∏–±–∫–∞ HTTP: {err}")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# –í—ã–∑–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
def send_telegram_message_sync(message: str):
    asyncio.run(send_telegram_message(message))
